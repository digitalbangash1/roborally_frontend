[{"C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\index.tsx":"1","C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\App.tsx":"3","C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\context\\GameContextProvider.tsx":"4","C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\components\\DashboardComponent.tsx":"5","C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\context\\GameContext.ts":"6","C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\api\\GameApi.ts":"7","C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\components\\BoardComponent.tsx":"8","C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\components\\SpaceComponent.tsx":"9"},{"size":614,"mtime":1623260207926,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1623098788549,"results":"12","hashOfConfig":"11"},{"size":1462,"mtime":1623261937296,"results":"13","hashOfConfig":"11"},{"size":7768,"mtime":1623321139594,"results":"14","hashOfConfig":"11"},{"size":3822,"mtime":1623320283743,"results":"15","hashOfConfig":"11"},{"size":1844,"mtime":1623319729338,"results":"16","hashOfConfig":"11"},{"size":1596,"mtime":1623318618950,"results":"17","hashOfConfig":"11"},{"size":2548,"mtime":1623320939869,"results":"18","hashOfConfig":"11"},{"size":2309,"mtime":1623098788736,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"uvzjqz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\index.tsx",[],["40","41"],"C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\App.tsx",[],"C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\context\\GameContextProvider.tsx",["42","43","44","45"],"C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\components\\DashboardComponent.tsx",["46","47","48"],"import React, {FunctionComponent, useCallback, useContext, useEffect, useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport styles from \"../styling/DashboardComponent.module.scss\"\r\nimport GameContext from \"../context/GameContext\";\r\nimport {Board} from \"../types/Board\";\r\n\r\ntype DashboardComponentProps = {}\r\nconst DashboardComponent: FunctionComponent<DashboardComponentProps> = () => {\r\n    const {\r\n        board, getBoards, switchBoard, addPlayerToBoard, player,\r\n        initializeCurrentPlayer, getBoard\r\n    } = useContext(GameContext)\r\n    const [boards, setBoards] = useState<Board[]>([]);\r\n    const [refreshBoards, setRefreshBoards] = useState<boolean>(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        console.log('Getting boards')\r\n        getBoards().then(boards => {\r\n            console.log('Got boards', boards);\r\n            setBoards(boards);\r\n        });\r\n        setRefreshBoards(false);\r\n    }, [board, refreshBoards])\r\n\r\n    const onSwitchBoard = useCallback(async (boardId: number) => {\r\n        board.boardId = boardId;\r\n        player.boardId = boardId;\r\n        console.log('adding player: ', player);\r\n        await addPlayerToBoard(boardId);\r\n        await switchBoard(boardId)\r\n        const updatedBoard = await getBoard(boardId)\r\n        if (updatedBoard != null && updatedBoard.playerDtos.length >= 2) {\r\n            await initializeCurrentPlayer(boardId, player.playerId);\r\n            history.push('/board/' + boardId)\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3 className={styles.boardsTitle}>Boards</h3>\r\n                <CreateBoardButtonComponent getBoards={() => boards} setRefreshBoards={setRefreshBoards}/>\r\n                <button onClick={() => setRefreshBoards(true)} className={styles.refreshButton}>\r\n                    Refresh\r\n                </button>\r\n            </div>\r\n            <ol>\r\n                {boards.map((board) => (\r\n                    <li key={board.boardId}>\r\n                        <div>\r\n                            <div className={styles.board}>{board.boardName}</div>\r\n                            <button className={styles.editButton}>Edit</button>\r\n                            <button onClick={() => onSwitchBoard(board.boardId)} className={styles.playButton}>Play\r\n                            </button>\r\n                        </div>\r\n                        <ol>\r\n                            {board.playerDtos.map((player) => (\r\n                                <li key={player.playerId}>{player.playerName}</li>\r\n                            ))}\r\n                        </ol>\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\ntype CreateBoardButtonProps = {\r\n    getBoards: () => Board[],\r\n    setRefreshBoards: (refresh: boolean) => void;\r\n}\r\nconst CreateBoardButtonComponent: FunctionComponent<CreateBoardButtonProps> =\r\n    ({getBoards, setRefreshBoards}) => {\r\n        const {board, createBoard,} = useContext(GameContext)\r\n        const onCreate = useCallback(async () => {\r\n            console.log('Creating new board');\r\n            let nextBoardId = 1;\r\n            const boards = getBoards();\r\n            if (boards.length > 0) {\r\n                nextBoardId = boards[boards.length - 1].boardId + 1;\r\n            }\r\n            await createBoard({\r\n                boardId: -1, boardName: \"Board \" + nextBoardId, width: 8, height: 8,\r\n                playerDtos: board.playerDtos, spaceDtos: board.spaceDtos\r\n            })\r\n            setRefreshBoards(true);\r\n        }, [getBoards, setRefreshBoards])\r\n\r\n        return (\r\n            <button onClick={onCreate}>\r\n                Create new board\r\n            </button>\r\n        );\r\n    }\r\n\r\nexport default DashboardComponent\r\n\r\n\r\n","C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\context\\GameContext.ts",[],"C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\api\\GameApi.ts",[],"C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\components\\BoardComponent.tsx",["49","50"],"C:\\Users\\PervezAzizi\\Desktop\\Pervez\\bangash\\roborally_frontend\\src\\components\\SpaceComponent.tsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":32,"column":20,"nodeType":"57","messageId":"58","endLine":32,"endColumn":29},{"ruleId":"59","severity":1,"message":"60","line":83,"column":8,"nodeType":"61","endLine":83,"endColumn":58,"suggestions":"62"},{"ruleId":"55","severity":1,"message":"63","line":97,"column":11,"nodeType":"57","messageId":"58","endLine":97,"endColumn":22},{"ruleId":"59","severity":1,"message":"64","line":145,"column":8,"nodeType":"61","endLine":145,"endColumn":10,"suggestions":"65"},{"ruleId":"59","severity":1,"message":"66","line":24,"column":8,"nodeType":"61","endLine":24,"endColumn":30,"suggestions":"67"},{"ruleId":"59","severity":1,"message":"68","line":38,"column":8,"nodeType":"61","endLine":38,"endColumn":10,"suggestions":"69"},{"ruleId":"59","severity":1,"message":"70","line":90,"column":12,"nodeType":"61","endLine":90,"endColumn":41,"suggestions":"71"},{"ruleId":"55","severity":1,"message":"72","line":10,"column":7,"nodeType":"57","messageId":"58","endLine":10,"endColumn":14},{"ruleId":"55","severity":1,"message":"73","line":15,"column":50,"nodeType":"57","messageId":"58","endLine":15,"endColumn":58},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'setPlayer' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'currentPlayer.playerName'. Either include it or remove the dependency array.","ArrayExpression",["76"],"'switchBoard' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'player'. Either include it or remove the dependency array.",["77"],"React Hook useEffect has a missing dependency: 'getBoards'. Either include it or remove the dependency array.",["78"],"React Hook useCallback has missing dependencies: 'addPlayerToBoard', 'board', 'getBoard', 'history', 'initializeCurrentPlayer', 'player', and 'switchBoard'. Either include them or remove the dependency array.",["79"],"React Hook useCallback has missing dependencies: 'board.playerDtos', 'board.spaceDtos', and 'createBoard'. Either include them or remove the dependency array.",["80"],"'numbers' is assigned a value but never used.","'getBoard' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [currentPlayer.playerName, currentPlayerIndex, gameId, playerCount, players]",{"range":"91","text":"92"},"Update the dependencies array to be: [player]",{"range":"93","text":"94"},"Update the dependencies array to be: [board, getBoards, refreshBoards]",{"range":"95","text":"96"},"Update the dependencies array to be: [addPlayerToBoard, board, getBoard, history, initializeCurrentPlayer, player, switchBoard]",{"range":"97","text":"98"},"Update the dependencies array to be: [board.playerDtos, board.spaceDtos, createBoard, getBoards, setRefreshBoards]",{"range":"99","text":"100"},[4107,4157],"[currentPlayer.playerName, currentPlayerIndex, gameId, playerCount, players]",[6461,6463],"[player]",[967,989],"[board, getBoards, refreshBoards]",[1525,1527],"[addPlayerToBoard, board, getBoard, history, initializeCurrentPlayer, player, switchBoard]",[3612,3641],"[board.playerDtos, board.spaceDtos, createBoard, getBoards, setRefreshBoards]"]